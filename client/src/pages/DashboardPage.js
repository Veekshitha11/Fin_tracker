import React, { useEffect, useState, useCallback } from 'react';
import OverviewStats from '../components/dashboard/OverviewStats';
import AddTransactionForm from '../components/dashboard/AddTransactionForm';
import RecentTransactionList from '../components/dashboard/RecentTransactionList';
import SpendingPieChart from '../components/dashboard/SpendingPieChart';
import { getDashboardStats, getRecentTransactions } from '../api/transactionsApi';
import { useAppContext } from '../context/AppContext';

const DashboardPage = () => {
  // --- FIX #1: Added 'loading' to the destructuring ---
Â  const {
Â  Â  stats,
Â  Â  setStats,
Â  Â  transactions,
Â  Â  setTransactions,
Â  Â  loading, // Get the loading state
Â  Â  setLoading,
Â  } = useAppContext();
Â  const [refreshKey, setRefreshKey] = useState(0);

   const loadDashboardData = useCallback(async () => {
Â  Â  setLoading(true);
Â  Â  try {
Â  Â  Â  const [statsResponse, transactionsResponse] = await Promise.all([
Â  Â  Â  Â  getDashboardStats(),
Â  Â  Â  Â  getRecentTransactions(10),
Â  Â  Â  ]);
Â  Â  Â  setStats(statsResponse.data);
Â  Â  Â  setTransactions(transactionsResponse.data);
Â  Â  } catch (error) {
Â  Â  Â  console.error('Error loading dashboard data:', error);
Â  Â  } finally {
Â  Â  Â  setLoading(false);
Â  Â  }
Â  },[setLoading, setStats, setTransactions]);
  
Â  useEffect(() => {
Â  Â  loadDashboardData();
Â  },[refreshKey, loadDashboardData]);

Â 

Â  const handleRefresh = () => {
Â  Â  setRefreshKey((prev) => prev + 1);
Â  };

  // --- FIX #2: Add a loading check ---
  // If data is loading OR stats haven't been loaded yet,
  // display a loading message instead of the dashboard.
Â  if (loading || !stats) {
Â  Â  return (
Â  Â  Â  <div className="flex justify-center items-center h-screen">
Â  Â  Â  Â  <h2 className="text-2xl font-bold text-gray-700">Loading Dashboard...</h2>
        {/* You could add a spinner component here */}
Â  Â  Â  </div>
Â  Â  );
Â  }

  // --- If we get here, 'loading' is false AND 'stats' exists ---
Â  return (
Â  Â  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
Â  Â  Â  <h1 className="text-4xl font-bold text-black mb-8 text-center drop-shadow-lg">
Â  Â  Â  Â  ðŸ’° Financial Dashboard
Â  Â  Â  </h1>

Â  Â  Â  {/* Overview Stats */}
      {/* This is now safe to render */}
Â  Â  Â  <OverviewStats stats={stats} />

Â  Â  Â  {/* Add Transaction Form */}
Â  Â  Â  <AddTransactionForm onTransactionAdded={handleRefresh} />

Â  Â  Â  {/* Charts and Recent Transactions */}
Â  Â  Â  <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
        {/* This is now safe to render */}
Â  Â  Â  Â  <SpendingPieChart spendingByCategory={stats.spendingByCategory} />
Â  Â  Â  Â  <RecentTransactionList
Â  Â  Â  Â  Â  transactions={transactions}
Â  Â  Â  Â  Â  onTransactionDeleted={handleRefresh}
Â  Â  Â  Â  />
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default DashboardPage;
